<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="12_12_19_ORGPUB_SEARCH" enabled="true">
      <stringProp name="TestPlan.comments">Parms: 
SearchValue
NameID
BossID
VsID Cookie
Download Token Cookie - dynamic per user
COOKIE_OPHtml5UnsecurePerformanceTest - Session Cookie
Capture Download Sizes via Size Assertions
Think-Time
Response Assertions 
</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">rdcou1web28.hosting.aqdom.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">false</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="12_19_19_SearchValues" enabled="true">
        <stringProp name="filename">C:\Users\Andrea.Paddock\Downloads\12_19_19_SearchValues.csv</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="variableNames"></stringProp>
        <boolProp name="randomOrder">false</boolProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="rewindOnTheEndOfList">true</boolProp>
        <boolProp name="independentListPerThread">false</boolProp>
        <stringProp name="TestPlan.comments">${SearchValue}</stringProp>
      </com.blazemeter.jmeter.RandomCSVDataSetConfig>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="false">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="classname">kg.apc.jmeter.reporters.LoadosophiaClient</stringProp>
      </BackendListener>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Org Publisher - Searching, Filtering, Viewing Details of Results and Exporting different Levels to PDF/PowerPoint" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <stringProp name="TestPlan.comments">*   Purpose:
*   Mimic users by loading their org chart and selecting the new Search Box. Users will enter a few letter to search by name. 
*   User will filter by gender, location and view the details of the new org chart from the specified search results.
*   User will export to PowerPoint and PDF. User will change levels thus changing the Org Chart and will export to PowerPoint/PDF a second time.
*   Afterwards, the user will clear the Search Results

***************************************************************************
Thread Properties:
1) # of Threads: 20
2) Ramp-up Period: 540 seconds (9 min)
3) Loop Count: 1 

RunTime Controller: 
1 hr. 9 min total duration 
</stringProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_01_LP" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <stringProp name="TestPlan.comments">User selects Org Pub unsecure link 
</stringProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                </elementProp>
                <elementProp name="X-dynaTrace" elementType="Header">
                  <stringProp name="Header.name">X-dynaTrace</stringProp>
                  <stringProp name="Header.value">NA=PFTM_OP_01_LP;PC=OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                </elementProp>
                <elementProp name="vsid" elementType="Header">
                  <stringProp name="Header.name">vsid</stringProp>
                  <stringProp name="Header.value">${COOKIE_vsid}</stringProp>
                </elementProp>
                <elementProp name="X-dynaTrace" elementType="Header">
                  <stringProp name="Header.name">X-dynaTrace</stringProp>
                  <stringProp name="Header.value">NA=01_PFTM_OP_LP;PC=OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/scripts/app/planning/scratchpad.html" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/scripts/app/planning/scratchpad.html</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/scripts/app/planning/dragdrop-manager.html" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/scripts/app/planning/dragdrop-manager.html</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/scripts/app/planning/planning-actions.html" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/scripts/app/planning/planning-actions.html</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/scripts/app/planning/profile.html" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/scripts/app/planning/profile.html</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/scripts/app/planning/profile-field-view.html" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/scripts/app/planning/profile-field-view.html</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/scripts/app/talent-grid.html" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/scripts/app/talent-grid.html</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/InitChart" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;sDevice&quot;: &quot;desktop&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/InitChart</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">vsid</stringProp>
                    <stringProp name="Header.value">${COOKIE_vsid}</stringProp>
                  </elementProp>
                  <elementProp name="X-dynaTrace" elementType="Header">
                    <stringProp name="Header.name">X-dynaTrace</stringProp>
                    <stringProp name="Header.value">NA=01a_PFTM_OP_LP;PC=OPHtml5UnsecurePerformanceTest/Chart/InitChart</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Chart User" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-574910707">Chart User</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
              <intProp name="ActionProcessor.action">0</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/getAvailableCharts" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/getAvailableCharts</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                  <elementProp name="X-dynaTrace" elementType="Header">
                    <stringProp name="Header.name">X-dynaTrace</stringProp>
                    <stringProp name="Header.value">NA=01b_PFTM_OP_LP;PC=OPHtml5UnsecurePerformanceTest/Chart/getAvailableCharts</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/getMenuList" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;chartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/getMenuList</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                  <elementProp name="X-dynaTrace" elementType="Header">
                    <stringProp name="Header.name">X-dynaTrace</stringProp>
                    <stringProp name="Header.value">NA=01c_PFTM_OP_LP;PC=OPHtml5UnsecurePerformanceTest/Chart/getMenuList</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/GetChartInfo" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;chartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/GetChartInfo</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                  <elementProp name="X-dynaTrace" elementType="Header">
                    <stringProp name="Header.name">X-dynaTrace</stringProp>
                    <stringProp name="Header.value">NA=01d_PFTM_OP_LP;PC=OPHtml5UnsecurePerformanceTest/Chart/GetChartInfo</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/signalr/negotiate?clientProtocol=1.5&amp;connectionData=%5B%7B%22name%22%3A%22applicationhub%22%7D%5D&amp;_=1576178096476" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">1.5%5B%7B%22name%22%3A%22applicationhub%22%7D%5D1576178096476</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">rdcou1web28.hosting.aqdom.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/signalr/negotiate</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Fiddler</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">Keep-Alive</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - ConnectionToken" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">connectionToken</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;ConnectionToken&quot;:&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">=&quot;,</stringProp>
                <stringProp name="BoundaryExtractor.default">connectionToken=NOT_FOUND</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - ConnectionId " enabled="true">
                <stringProp name="TestPlan.comments">Dynamic for each user </stringProp>
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">ConnectionId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&quot;ConnectionId&quot;:&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;KeepAliveTimeout</stringProp>
                <stringProp name="BoundaryExtractor.default">ConnectionId=NOT_FOUND</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/signalr/connect?transport=foreverFrame&amp;clientProtocol=1.5&amp;connectionToken=9BKZ4N%2FMWGfJhWEZ58HrsSL8ZYkIYqmCg4q29XcbE0Ub3DsmgmOGZsdv1Gv0wa37CZRN01IiAta2LRX0%2FlUwF97bP8cA81JFlQ%2BMSJ5SpZn3T8sLww0TwieFEEmta5I6WHUbhW3h8%2Fc8A2Q8jjUkpb0%2FRIsKUi%2Bur4%2Bt%2F5w2zdKoCUO0d1lmkvP%2BPRNbO0lLbRSltqEq5z2Oonkc9PPL57Mp3Ik19lEtogP4NpRt9lZaVhMpMvda8aHHBAsGpk6XwyVTBTP88jI5wur0Thq6C%2FQ6KhSMeHWnUoNTjhG8xtQHnB99saLQTg23URvb%2BCNIRfn5oa%2FaFmtBUdLxgafrwnFeJz7e0jP8iT262%2FYerKjb8%2FUrHd6CK80RM0zNUje66xUoEHqH7r7%2FIM3nMxJXLyMZ23RQZ%2F1B3uwQCpjBoDaBlb9iOowdBztcrCKD%2FHYyXH3W1E5u7qYg6xOWvrYOhSCy56Pz9BjCAALcRcnYPhI%3D&amp;connectionData=%5B%7B%22name%22%3A%22applicationhub%22%7D%5D&amp;tid=0&amp;frameId=1" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">transport=foreverFrame&amp;clientProtocol=1.5&amp;connectionToken=${connectionToken}&amp;connectionData=%5B%7B%22name%22%3A%22applicationhub%22%7D%5D&amp;tid=0&amp;frameId=1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">rdcou1web28.hosting.aqdom.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/signalr/connect?</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">FIDDLER - 12/12/19_OPSearch.jmx 
ConnectionData remains static: %5B%7B%22name%22%3A%22applicationhub%22%7D%5D</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html, application/xhtml+xml, image/jxr, */*</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">Keep-Alive</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DUPLICATE - FIDDLER http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/signalr/connect?transport=foreverFrame&amp;clientProtocol=1.5&amp;connectionToken=9BKZ4N%2FMWGfJhWEZ58HrsSL8ZYkIYqmCg4q29XcbE0Ub3DsmgmOGZsdv1Gv0wa37CZRN01IiAta2LRX0%2FlUwF97bP8cA81JFlQ%2BMSJ5SpZn3T8sLww0TwieFEEmta5I6WHUbhW3h8%2Fc8A2Q8jjUkpb0%2FRIsKUi%2Bur4%2Bt%2F5w2zdKoCUO0d1lmkvP%2BPRNbO0lLbRSltqEq5z2Oonkc9PPL57Mp3Ik19lEtogP4NpRt9lZaVhMpMvda8aHHBAsGpk6XwyVTBTP88jI5wur0Thq6C%2FQ6KhSMeHWnUoNTjhG8xtQHnB99saLQTg23URvb%2BCNIRfn5oa%2FaFmtBUdLxgafrwnFeJz7e0jP8iT262%2FYerKjb8%2FUrHd6CK80RM0zNUje66xUoEHqH7r7%2FIM3nMxJXLyMZ23RQZ%2F1B3uwQCpjBoDaBlb9iOowdBztcrCKD%2FHYyXH3W1E5u7qYg6xOWvrYOhSCy56Pz9BjCAALcRcnYPhI%3D&amp;connectionData=%5B%7B%22name%22%3A%22applicationhub%22%7D%5D&amp;tid=0&amp;frameId=1" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="connectionData" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionData</stringProp>
                    <stringProp name="Argument.value">%5B%7B%22name%22%3A%22applicationhub%22%7D%5D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="frameId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">frameId</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="connectionToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionToken</stringProp>
                    <stringProp name="Argument.value">9BKZ4N%2FMWGfJhWEZ58HrsSL8ZYkIYqmCg4q29XcbE0Ub3DsmgmOGZsdv1Gv0wa37CZRN01IiAta2LRX0%2FlUwF97bP8cA81JFlQ%2BMSJ5SpZn3T8sLww0TwieFEEmta5I6WHUbhW3h8%2Fc8A2Q8jjUkpb0%2FRIsKUi%2Bur4%2Bt%2F5w2zdKoCUO0d1lmkvP%2BPRNbO0lLbRSltqEq5z2Oonkc9PPL57Mp3Ik19lEtogP4NpRt9lZaVhMpMvda8aHHBAsGpk6XwyVTBTP88jI5wur0Thq6C%2FQ6KhSMeHWnUoNTjhG8xtQHnB99saLQTg23URvb%2BCNIRfn5oa%2FaFmtBUdLxgafrwnFeJz7e0jP8iT262%2FYerKjb8%2FUrHd6CK80RM0zNUje66xUoEHqH7r7%2FIM3nMxJXLyMZ23RQZ%2F1B3uwQCpjBoDaBlb9iOowdBztcrCKD%2FHYyXH3W1E5u7qYg6xOWvrYOhSCy56Pz9BjCAALcRcnYPhI%3D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="transport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">transport</stringProp>
                    <stringProp name="Argument.value">foreverFrame</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="tid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">tid</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">rdcou1web28.hosting.aqdom.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/signalr/connect</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">FIDDLER - 12/12/19_OPSearch.jmx</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html, application/xhtml+xml, image/jxr, */*</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">Keep-Alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BLAZEMETER http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/signalr/negotiate?clientProtocol=1.5&amp;connectionData=%5B%7B%22name%22%3A%22applicationhub%22%7D%5D&amp;_=1576168438621" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="connectionData" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionData</stringProp>
                    <stringProp name="Argument.value">[{&quot;name&quot;:&quot;applicationhub&quot;}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_</stringProp>
                    <stringProp name="Argument.value">1576168438621</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/signalr/negotiate</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Blazemeter recording</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/signalr/connect?transport=serverSentEvents&amp;clientProtocol=1.5&amp;connectionToken=JICFfVncfpxinQ3l3GWjWopxovz%2Brr4rTH3uA8tcKWWFqKQFLZlasg83pwkfxpzFxNzdvily8RhXphfXiuDxEoW4pRMaJDOdXCkDq0v%2BvPeFd9wGUuozyeqtCXkniTjROrCrnnHRii5VioVvG%2F%2BXy4TyivY3gMbfMQ1hUxf86GJbKpPMNFU5UO1n%2BvgWHwmWislLz3xbV09ZkKAu8Ek1NRT4XLHmU0wXABhQgg7vS%2BPHfn%2BdGdvWuOKSo5i8gep1kqYOdmegSY9xfzo49E6wT%2Bi7VU%2FzjDGYi7ooalz3VxAH9bw8BAeMCWf3CLCfYn4OPlCx971%2B6Mz%2BP5vQS5E%2BS%2Fb5dbVOYTvFzM0ggCJ3613%2ByDxptOsR92t1VDejqp3V3mWrPDhulK1ZkvE0ZIJVel0td%2Fs%2BVFW1xSS9AEemMHncJ3gJKld%2FAqaDWF%2BWXdt%2B3Qa9tTbf9at7%2FTIGjN8P%2F5kNV142P6rYV3pJZ3WCc9g%3D&amp;connectionData=%5B%7B%22name%22%3A%22applicationhub%22%7D%5D&amp;tid=9" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="connectionData" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionData</stringProp>
                    <stringProp name="Argument.value">[{&quot;name&quot;:&quot;applicationhub&quot;}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="connectionToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionToken</stringProp>
                    <stringProp name="Argument.value">${connectionToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="transport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">transport</stringProp>
                    <stringProp name="Argument.value">serverSentEvents</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="tid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tid</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/signalr/connect</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Connection Token / Blazemeter Recording</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/event-stream</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DUPLICATE - BLAZEMETER http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/signalr/connect?transport=serverSentEvents&amp;clientProtocol=1.5&amp;connectionToken=JICFfVncfpxinQ3l3GWjWopxovz%2Brr4rTH3uA8tcKWWFqKQFLZlasg83pwkfxpzFxNzdvily8RhXphfXiuDxEoW4pRMaJDOdXCkDq0v%2BvPeFd9wGUuozyeqtCXkniTjROrCrnnHRii5VioVvG%2F%2BXy4TyivY3gMbfMQ1hUxf86GJbKpPMNFU5UO1n%2BvgWHwmWislLz3xbV09ZkKAu8Ek1NRT4XLHmU0wXABhQgg7vS%2BPHfn%2BdGdvWuOKSo5i8gep1kqYOdmegSY9xfzo49E6wT%2Bi7VU%2FzjDGYi7ooalz3VxAH9bw8BAeMCWf3CLCfYn4OPlCx971%2B6Mz%2BP5vQS5E%2BS%2Fb5dbVOYTvFzM0ggCJ3613%2ByDxptOsR92t1VDejqp3V3mWrPDhulK1ZkvE0ZIJVel0td%2Fs%2BVFW1xSS9AEemMHncJ3gJKld%2FAqaDWF%2BWXdt%2B3Qa9tTbf9at7%2FTIGjN8P%2F5kNV142P6rYV3pJZ3WCc9g%3D&amp;connectionData=%5B%7B%22name%22%3A%22applicationhub%22%7D%5D&amp;tid=9" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="connectionData" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionData</stringProp>
                    <stringProp name="Argument.value">[{&quot;name&quot;:&quot;applicationhub&quot;}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="connectionToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionToken</stringProp>
                    <stringProp name="Argument.value">JICFfVncfpxinQ3l3GWjWopxovz+rr4rTH3uA8tcKWWFqKQFLZlasg83pwkfxpzFxNzdvily8RhXphfXiuDxEoW4pRMaJDOdXCkDq0v+vPeFd9wGUuozyeqtCXkniTjROrCrnnHRii5VioVvG/+Xy4TyivY3gMbfMQ1hUxf86GJbKpPMNFU5UO1n+vgWHwmWislLz3xbV09ZkKAu8Ek1NRT4XLHmU0wXABhQgg7vS+PHfn+dGdvWuOKSo5i8gep1kqYOdmegSY9xfzo49E6wT+i7VU/zjDGYi7ooalz3VxAH9bw8BAeMCWf3CLCfYn4OPlCx971+6Mz+P5vQS5E+S/b5dbVOYTvFzM0ggCJ3613+yDxptOsR92t1VDejqp3V3mWrPDhulK1ZkvE0ZIJVel0td/s+VFW1xSS9AEemMHncJ3gJKld/AqaDWF+WXdt+3Qa9tTbf9at7/TIGjN8P/5kNV142P6rYV3pJZ3WCc9g=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="transport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">transport</stringProp>
                    <stringProp name="Argument.value">serverSentEvents</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="tid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tid</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/signalr/connect</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Connection Token / Blazemeter Recording</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/event-stream</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/GetChartData" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;nPlanningChartKey&quot;: -1,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;oBoxIDs&quot;: [&#xd;
    null&#xd;
  ],&#xd;
  &quot;oGroupIDs&quot;: [&#xd;
    &quot;0&quot;&#xd;
  ],&#xd;
  &quot;iLevels&quot;: 2,&#xd;
  &quot;bHighlightFilter&quot;: false,&#xd;
  &quot;bGetParentOfPartner&quot;: true,&#xd;
  &quot;bShowChainOfCommand&quot;: false&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/GetChartData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                  <elementProp name="vsid" elementType="Header">
                    <stringProp name="Header.name">vsid</stringProp>
                    <stringProp name="Header.value">${COOKIE_vsid}</stringProp>
                  </elementProp>
                  <elementProp name="X-dynaTrace" elementType="Header">
                    <stringProp name="Header.name">X-dynaTrace</stringProp>
                    <stringProp name="Header.value">NA=01e_PFTM_OP_LP;PC=OPHtml5UnsecurePerformanceTest/Chart/GetChartData</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/signalr/start?transport=serverSentEvents&amp;clientProtocol=1.5&amp;connectionToken=JICFfVncfpxinQ3l3GWjWopxovz%2Brr4rTH3uA8tcKWWFqKQFLZlasg83pwkfxpzFxNzdvily8RhXphfXiuDxEoW4pRMaJDOdXCkDq0v%2BvPeFd9wGUuozyeqtCXkniTjROrCrnnHRii5VioVvG%2F%2BXy4TyivY3gMbfMQ1hUxf86GJbKpPMNFU5UO1n%2BvgWHwmWislLz3xbV09ZkKAu8Ek1NRT4XLHmU0wXABhQgg7vS%2BPHfn%2BdGdvWuOKSo5i8gep1kqYOdmegSY9xfzo49E6wT%2Bi7VU%2FzjDGYi7ooalz3VxAH9bw8BAeMCWf3CLCfYn4OPlCx971%2B6Mz%2BP5vQS5E%2BS%2Fb5dbVOYTvFzM0ggCJ3613%2ByDxptOsR92t1VDejqp3V3mWrPDhulK1ZkvE0ZIJVel0td%2Fs%2BVFW1xSS9AEemMHncJ3gJKld%2FAqaDWF%2BWXdt%2B3Qa9tTbf9at7%2FTIGjN8P%2F5kNV142P6rYV3pJZ3WCc9g%3D&amp;connectionData=%5B%7B%22name%22%3A%22applicationhub%22%7D%5D&amp;_=1576168438622" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="connectionData" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionData</stringProp>
                    <stringProp name="Argument.value">[{&quot;name&quot;:&quot;applicationhub&quot;}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="connectionToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionToken</stringProp>
                    <stringProp name="Argument.value">JICFfVncfpxinQ3l3GWjWopxovz+rr4rTH3uA8tcKWWFqKQFLZlasg83pwkfxpzFxNzdvily8RhXphfXiuDxEoW4pRMaJDOdXCkDq0v+vPeFd9wGUuozyeqtCXkniTjROrCrnnHRii5VioVvG/+Xy4TyivY3gMbfMQ1hUxf86GJbKpPMNFU5UO1n+vgWHwmWislLz3xbV09ZkKAu8Ek1NRT4XLHmU0wXABhQgg7vS+PHfn+dGdvWuOKSo5i8gep1kqYOdmegSY9xfzo49E6wT+i7VU/zjDGYi7ooalz3VxAH9bw8BAeMCWf3CLCfYn4OPlCx971+6Mz+P5vQS5E+S/b5dbVOYTvFzM0ggCJ3613+yDxptOsR92t1VDejqp3V3mWrPDhulK1ZkvE0ZIJVel0td/s+VFW1xSS9AEemMHncJ3gJKld/AqaDWF+WXdt+3Qa9tTbf9at7/TIGjN8P/5kNV142P6rYV3pJZ3WCc9g=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="transport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">transport</stringProp>
                    <stringProp name="Argument.value">serverSentEvents</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">_</stringProp>
                    <stringProp name="Argument.value">1576168438622</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/signalr/start</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_LandingPage " enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Think_LandingPage" enabled="true">
              <stringProp name="TestPlan.comments">1-7-20 - Left off at Adding Think-Time to Script, Need Text Checks - then run Smoke Test for 10 min to see if # of transactions passed is similar to LR.</stringProp>
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">120000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
          <intProp name="ActionProcessor.action">0</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="TestPlan.comments">1,140 seconds = 10 min + 9 min ramp-up</stringProp>
          <stringProp name="RunTime.seconds">1140</stringProp>
        </RunTime>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="TestPlan.comments">Added Loop Controller Logic to replicate 101719OPSearch LR Script. 
Beginning at Action we have logic for a Loop set for users to loop 3x for transactions 2-8. 
Example from LR Script: 
	for (Comps=1; Comps &lt; 4; Comps++)// 4

	{
The end of the bracket is after transaction 8 in the script. 
Be aware of scoping in JMeter to make sure the Loop Controller is scoped underneath the RunTime controller 
so it adheres to the runtime setting.</stringProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_02_OriginalSearch_Box" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <stringProp name="TestPlan.comments">Select Search icon to open Search Box</stringProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/Search" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;sCurrentTopBoxID&quot;: &quot;21002&quot;,&#xd;
  &quot;oSearchCriteria&quot;: {&#xd;
    &quot;FieldCriteriaList&quot;: {&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FullName&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;JobTitle&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;1E33975E-DD66-44D6-ADE4-ACCD83D266A3&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;483254A4-46C9-4C5F-BF39-8DAEAE86251D&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;9D25A71A-3A96-437F-BAE9-D585D059169B&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;92A002F3-D996-4B2D-8809-3E7C4E2BA880&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;67C32BA2-3AE9-4B3B-9775-4FD59B36EA76&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;F3F175B7-3A0D-4C20-8A1B-835F53451463&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;9E1A1769-DF32-44C6-B7DE-5FB35284A50B&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;161F99E4-2F32-4954-A6ED-A5FE842A0EAB&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;F4BFFF7B-D9FC-4FDC-912D-C92D883916B8&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;2B43C981-7492-4AEC-BF73-5AA5D0ACB821&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;6B7EA60B-AFA0-44BD-96C5-2226C91BE1DF&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;Equal&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;FilterCriteriaList&quot;: [],&#xd;
    &quot;SearchColumns&quot;: [&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FullName&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;JobTitle&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;1E33975E-DD66-44D6-ADE4-ACCD83D266A3&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;483254A4-46C9-4C5F-BF39-8DAEAE86251D&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9D25A71A-3A96-437F-BAE9-D585D059169B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;92A002F3-D996-4B2D-8809-3E7C4E2BA880&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;67C32BA2-3AE9-4B3B-9775-4FD59B36EA76&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F3F175B7-3A0D-4C20-8A1B-835F53451463&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9E1A1769-DF32-44C6-B7DE-5FB35284A50B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;161F99E4-2F32-4954-A6ED-A5FE842A0EAB&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F4BFFF7B-D9FC-4FDC-912D-C92D883916B8&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;2B43C981-7492-4AEC-BF73-5AA5D0ACB821&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;6B7EA60B-AFA0-44BD-96C5-2226C91BE1DF&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      }&#xd;
    ],&#xd;
    &quot;Name&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;sPageNumber&quot;: -1,&#xd;
  &quot;sSortFieldID&quot;: &quot;FullName&quot;,&#xd;
  &quot;bSortAscending&quot;: true,&#xd;
  &quot;nSearchResultPageCount&quot;: 7&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=02_PFTM_OP_OriginalSearch_Box;PC=OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/Search" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;sCurrentTopBoxID&quot;: &quot;21002&quot;,&#xd;
  &quot;oSearchCriteria&quot;: {&#xd;
    &quot;FieldCriteriaList&quot;: {&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FullName&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;JobTitle&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;FilterCriteriaList&quot;: [],&#xd;
    &quot;SearchColumns&quot;: [&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FullName&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;JobTitle&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;1E33975E-DD66-44D6-ADE4-ACCD83D266A3&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;483254A4-46C9-4C5F-BF39-8DAEAE86251D&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9D25A71A-3A96-437F-BAE9-D585D059169B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;92A002F3-D996-4B2D-8809-3E7C4E2BA880&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;67C32BA2-3AE9-4B3B-9775-4FD59B36EA76&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F3F175B7-3A0D-4C20-8A1B-835F53451463&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9E1A1769-DF32-44C6-B7DE-5FB35284A50B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;161F99E4-2F32-4954-A6ED-A5FE842A0EAB&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F4BFFF7B-D9FC-4FDC-912D-C92D883916B8&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;2B43C981-7492-4AEC-BF73-5AA5D0ACB821&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;6B7EA60B-AFA0-44BD-96C5-2226C91BE1DF&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      }&#xd;
    ],&#xd;
    &quot;Name&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;sPageNumber&quot;: 0,&#xd;
  &quot;sSortFieldID&quot;: &quot;FullName&quot;,&#xd;
  &quot;bSortAscending&quot;: true,&#xd;
  &quot;nSearchResultPageCount&quot;: 3&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=02a_PFTM_OP_OriginalSearch_Box;PC=OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
                <intProp name="ActionProcessor.action">0</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_Result" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="30 seconds " enabled="true">
                <stringProp name="ConstantTimer.delay">15000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_03_OriginalSearch_User" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <stringProp name="TestPlan.comments">User enters first 3 letters of a Name and tabs out to return results</stringProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/TypeAhead" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;sTopBoxID&quot;: &quot;21002&quot;,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;sCriteria&quot;: &quot;${SearchValue}&quot;,&#xd;
  &quot;sFieldID&quot;: &quot;FullName&quot;,&#xd;
  &quot;sCachedSearchID&quot;: &quot;&quot;,&#xd;
  &quot;sCompareType&quot;: &quot;AnyPartField&quot;,&#xd;
  &quot;bIsDefaultSearch&quot;: false,&#xd;
  &quot;oFieldCriteriaList&quot;: {&#xd;
    &quot;Data&quot;: [&#xd;
      {&#xd;
        &quot;FieldDefID&quot;: &quot;FullName&quot;,&#xd;
        &quot;CriteriaItems&quot;: [],&#xd;
        &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefID&quot;: &quot;JobTitle&quot;,&#xd;
        &quot;CriteriaItems&quot;: [],&#xd;
        &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
        &quot;CriteriaItems&quot;: [],&#xd;
        &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
        &quot;CriteriaItems&quot;: [],&#xd;
        &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
        &quot;CriteriaItems&quot;: [],&#xd;
        &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
        &quot;CriteriaItems&quot;: [],&#xd;
        &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
        &quot;CriteriaItems&quot;: [],&#xd;
        &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/TypeAhead</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">original recording searched: dar</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=03_PFTM_OP_OriginalSearch_User;PC=OPHtml5UnsecurePerformanceTest/Chart/TypeAhead</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/Search" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;sCurrentTopBoxID&quot;: &quot;21002&quot;,&#xd;
  &quot;oSearchCriteria&quot;: {&#xd;
    &quot;FieldCriteriaList&quot;: {&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FullName&quot;,&#xd;
          &quot;CriteriaItems&quot;: [&#xd;
            {&#xd;
              &quot;TestValue&quot;: &quot;${SearchValue}&quot;,&#xd;
              &quot;LowerValue&quot;: &quot;&quot;,&#xd;
              &quot;UpperValue&quot;: &quot;&quot;,&#xd;
              &quot;ComparisonType&quot;: &quot;AnyPartField&quot;,&#xd;
              &quot;Options&quot;: {}&#xd;
            }&#xd;
          ],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;JobTitle&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;FilterCriteriaList&quot;: [],&#xd;
    &quot;SearchColumns&quot;: [&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FullName&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;JobTitle&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;1E33975E-DD66-44D6-ADE4-ACCD83D266A3&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;483254A4-46C9-4C5F-BF39-8DAEAE86251D&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9D25A71A-3A96-437F-BAE9-D585D059169B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;92A002F3-D996-4B2D-8809-3E7C4E2BA880&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;67C32BA2-3AE9-4B3B-9775-4FD59B36EA76&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F3F175B7-3A0D-4C20-8A1B-835F53451463&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9E1A1769-DF32-44C6-B7DE-5FB35284A50B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;161F99E4-2F32-4954-A6ED-A5FE842A0EAB&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F4BFFF7B-D9FC-4FDC-912D-C92D883916B8&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;2B43C981-7492-4AEC-BF73-5AA5D0ACB821&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;6B7EA60B-AFA0-44BD-96C5-2226C91BE1DF&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      }&#xd;
    ],&#xd;
    &quot;Name&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;sPageNumber&quot;: 0,&#xd;
  &quot;sSortFieldID&quot;: &quot;FullName&quot;,&#xd;
  &quot;bSortAscending&quot;: true,&#xd;
  &quot;nSearchResultPageCount&quot;: 3&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">TestValue - Substitute Spreadsheet &quot;dar&quot;</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=03a_PFTM_OP_OriginalSearch_User;PC=OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                    </elementProp>
                  </collectionProp>
                  <stringProp name="TestPlan.comments">1/6/20 - Add DT HEADER HERE! </stringProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - Status&quot;:&quot;Success" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1306245269">Status&quot;:&quot;Success</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/Search" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;sCurrentTopBoxID&quot;: &quot;21002&quot;,&#xd;
  &quot;oSearchCriteria&quot;: {&#xd;
    &quot;FieldCriteriaList&quot;: {&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FullName&quot;,&#xd;
          &quot;CriteriaItems&quot;: [&#xd;
            {&#xd;
              &quot;TestValue&quot;: &quot;${SearchValue}&quot;,&#xd;
              &quot;LowerValue&quot;: &quot;&quot;,&#xd;
              &quot;UpperValue&quot;: &quot;&quot;,&#xd;
              &quot;ComparisonType&quot;: &quot;AnyPartField&quot;,&#xd;
              &quot;Options&quot;: {}&#xd;
            }&#xd;
          ],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;JobTitle&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;FilterCriteriaList&quot;: [],&#xd;
    &quot;SearchColumns&quot;: [&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FullName&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;JobTitle&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;1E33975E-DD66-44D6-ADE4-ACCD83D266A3&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;483254A4-46C9-4C5F-BF39-8DAEAE86251D&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9D25A71A-3A96-437F-BAE9-D585D059169B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;92A002F3-D996-4B2D-8809-3E7C4E2BA880&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;67C32BA2-3AE9-4B3B-9775-4FD59B36EA76&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F3F175B7-3A0D-4C20-8A1B-835F53451463&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9E1A1769-DF32-44C6-B7DE-5FB35284A50B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;161F99E4-2F32-4954-A6ED-A5FE842A0EAB&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F4BFFF7B-D9FC-4FDC-912D-C92D883916B8&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;2B43C981-7492-4AEC-BF73-5AA5D0ACB821&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;6B7EA60B-AFA0-44BD-96C5-2226C91BE1DF&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      }&#xd;
    ],&#xd;
    &quot;Name&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;sPageNumber&quot;: 0,&#xd;
  &quot;sSortFieldID&quot;: &quot;FullName&quot;,&#xd;
  &quot;bSortAscending&quot;: true,&#xd;
  &quot;nSearchResultPageCount&quot;: 3&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">Substitute &quot;TestValue&quot;: &quot;dar&quot;,</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=03b_PFTM_OP_OriginalSearch_User;PC=OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_Result" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="30 seconds" enabled="true">
                <stringProp name="ConstantTimer.delay">15000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_04_OriginalSearch_Gender" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <stringProp name="TestPlan.comments">User filters Search by gender</stringProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/Search" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;sCurrentTopBoxID&quot;: &quot;21002&quot;,&#xd;
  &quot;oSearchCriteria&quot;: {&#xd;
    &quot;FieldCriteriaList&quot;: {&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FullName&quot;,&#xd;
          &quot;CriteriaItems&quot;: [&#xd;
            {&#xd;
              &quot;TestValue&quot;: &quot;${SearchValue}&quot;,&#xd;
              &quot;LowerValue&quot;: &quot;&quot;,&#xd;
              &quot;UpperValue&quot;: &quot;&quot;,&#xd;
              &quot;ComparisonType&quot;: &quot;AnyPartField&quot;,&#xd;
              &quot;Options&quot;: {}&#xd;
            }&#xd;
          ],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;JobTitle&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;FilterCriteriaList&quot;: [&#xd;
      {&#xd;
        &quot;FilterID&quot;: &quot;Gender&quot;,&#xd;
        &quot;FilterType&quot;: &quot;Categoried&quot;,&#xd;
        &quot;SelectedFilters&quot;: [&#xd;
          &quot;80&quot;&#xd;
        ],&#xd;
        &quot;ComparisonType&quot;: &quot;InGroup&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;SearchColumns&quot;: [&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FullName&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;JobTitle&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;1E33975E-DD66-44D6-ADE4-ACCD83D266A3&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;483254A4-46C9-4C5F-BF39-8DAEAE86251D&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9D25A71A-3A96-437F-BAE9-D585D059169B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;92A002F3-D996-4B2D-8809-3E7C4E2BA880&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;67C32BA2-3AE9-4B3B-9775-4FD59B36EA76&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F3F175B7-3A0D-4C20-8A1B-835F53451463&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9E1A1769-DF32-44C6-B7DE-5FB35284A50B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;161F99E4-2F32-4954-A6ED-A5FE842A0EAB&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F4BFFF7B-D9FC-4FDC-912D-C92D883916B8&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;2B43C981-7492-4AEC-BF73-5AA5D0ACB821&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;6B7EA60B-AFA0-44BD-96C5-2226C91BE1DF&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      }&#xd;
    ],&#xd;
    &quot;Name&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;sPageNumber&quot;: 0,&#xd;
  &quot;sSortFieldID&quot;: &quot;FullName&quot;,&#xd;
  &quot;bSortAscending&quot;: true,&#xd;
  &quot;nSearchResultPageCount&quot;: 3&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments"> 80 means male. 
&quot;FilterID&quot;: &quot;Gender&quot;,
  &quot;FilterType&quot;: &quot;Categoried&quot;,
  &quot;SelectedFilters&quot;: [
  &quot;80&quot;</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=04_PFTM_OP_OriginalSearch_Gender;PC=OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - &quot;PersonID&quot;" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="470640880">&quot;PersonID&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_Result" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="30 seconds" enabled="true">
                <stringProp name="ConstantTimer.delay">15000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_05_OriginalSearch_Location" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <stringProp name="TestPlan.comments">User filters by Location

Capture ParentBoxID - NameID </stringProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/Search" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;sCurrentTopBoxID&quot;: &quot;21002&quot;,&#xd;
  &quot;oSearchCriteria&quot;: {&#xd;
    &quot;FieldCriteriaList&quot;: {&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FullName&quot;,&#xd;
          &quot;CriteriaItems&quot;: [&#xd;
            {&#xd;
              &quot;TestValue&quot;: &quot;${SearchValue}&quot;,&#xd;
              &quot;LowerValue&quot;: &quot;&quot;,&#xd;
              &quot;UpperValue&quot;: &quot;&quot;,&#xd;
              &quot;ComparisonType&quot;: &quot;AnyPartField&quot;,&#xd;
              &quot;Options&quot;: {}&#xd;
            }&#xd;
          ],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;JobTitle&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;FilterCriteriaList&quot;: [&#xd;
      {&#xd;
        &quot;FilterID&quot;: &quot;Gender&quot;,&#xd;
        &quot;FilterType&quot;: &quot;Categoried&quot;,&#xd;
        &quot;SelectedFilters&quot;: [&#xd;
          &quot;80&quot;&#xd;
        ],&#xd;
        &quot;ComparisonType&quot;: &quot;InGroup&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;FilterID&quot;: &quot;Location&quot;,&#xd;
        &quot;FilterType&quot;: &quot;Categoried&quot;,&#xd;
        &quot;SelectedFilters&quot;: [&#xd;
          &quot;36&quot;&#xd;
        ],&#xd;
        &quot;ComparisonType&quot;: &quot;InGroup&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;SearchColumns&quot;: [&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FullName&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;JobTitle&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;1E33975E-DD66-44D6-ADE4-ACCD83D266A3&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;483254A4-46C9-4C5F-BF39-8DAEAE86251D&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9D25A71A-3A96-437F-BAE9-D585D059169B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;92A002F3-D996-4B2D-8809-3E7C4E2BA880&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;67C32BA2-3AE9-4B3B-9775-4FD59B36EA76&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F3F175B7-3A0D-4C20-8A1B-835F53451463&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9E1A1769-DF32-44C6-B7DE-5FB35284A50B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;161F99E4-2F32-4954-A6ED-A5FE842A0EAB&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F4BFFF7B-D9FC-4FDC-912D-C92D883916B8&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;2B43C981-7492-4AEC-BF73-5AA5D0ACB821&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;6B7EA60B-AFA0-44BD-96C5-2226C91BE1DF&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      }&#xd;
    ],&#xd;
    &quot;Name&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;sPageNumber&quot;: 0,&#xd;
  &quot;sSortFieldID&quot;: &quot;FullName&quot;,&#xd;
  &quot;bSortAscending&quot;: true,&#xd;
  &quot;nSearchResultPageCount&quot;: 3&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">&quot;FilterID&quot;: &quot;Location&quot;,
&quot;FilterType&quot;: &quot;Categoried&quot;,
&quot;SelectedFilters&quot;: [
	&quot;36&quot; --This means LOCATION</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=05_PFTM_OP_OriginalSearch_Location;PC=OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - NameID1" enabled="true">
                  <stringProp name="TestPlan.comments">Parent BoxID</stringProp>
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">NameID1</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;ParentBoxID&quot;:{&quot;Data&quot;:&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;IsScrubbed&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.default">NameID1=NOT_FOUND</stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">0</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
                <intProp name="ActionProcessor.action">0</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree/>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
                <stringProp name="CounterConfig.start"></stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr"></stringProp>
                <stringProp name="CounterConfig.name"></stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_Result" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="30 seconds" enabled="true">
                <stringProp name="ConstantTimer.delay">15000</stringProp>
                <stringProp name="RandomTimer.range">30000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_06_OriginalSearch_View" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
              <stringProp name="TestPlan.comments">User views search results and selects a user to view
Capturing BossID. </stringProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/GetChartData" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;nPlanningChartKey&quot;: -1,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;oBoxIDs&quot;: [&#xd;
    &quot;${NameID1}&quot;&#xd;
  ],&#xd;
  &quot;oGroupIDs&quot;: [&#xd;
    &quot;0&quot;&#xd;
  ],&#xd;
  &quot;iLevels&quot;: 2,&#xd;
  &quot;bHighlightFilter&quot;: false,&#xd;
  &quot;bGetParentOfPartner&quot;: true,&#xd;
  &quot;bShowChainOfCommand&quot;: false&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/GetChartData</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">29886</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="content-type" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=06_PFTM_OP_OriginalSearch_View;PC=OPHtml5UnsecurePerformanceTest/Chart/GetChartData</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Boundary Extractor - BossID" enabled="true">
                  <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                  <stringProp name="BoundaryExtractor.refname">BossID</stringProp>
                  <stringProp name="BoundaryExtractor.lboundary">&quot;ParentID&quot;:{&quot;Data&quot;:&quot;</stringProp>
                  <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;IsScrubbed&quot;:false}</stringProp>
                  <stringProp name="BoundaryExtractor.default">BossID_NOT_FOUND</stringProp>
                  <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                  <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                </BoundaryExtractor>
                <hashTree/>
              </hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
                <intProp name="ActionProcessor.action">0</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_ViewEmployee" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="90 seconds" enabled="true">
                <stringProp name="ConstantTimer.delay">45000</stringProp>
                <stringProp name="RandomTimer.range">90000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_07_OriginalSearch_PPT1" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <stringProp name="TestPlan.comments">User selects option to export org chart to PowerPoint.</stringProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/GetPowerPoint/OP119HTMLPerformanceTestChart?bHighlightFilter=false&amp;sChartName=OP119HTMLPerformanceTestChart&amp;sGroupIDs=0&amp;sIncludeLegend=true&amp;sNumberOfLevels=2&amp;sPageSize=Ledger&amp;sShowChartBackground=true&amp;sTopBox=29886&amp;sViewID=0&amp;sScaling=100&amp;sDownloadToken=1578338681175" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="sPageSize" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sPageSize</stringProp>
                      <stringProp name="Argument.value">Ledger</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sShowChartBackground" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sShowChartBackground</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sScaling" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sScaling</stringProp>
                      <stringProp name="Argument.value">100</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sIncludeLegend" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sIncludeLegend</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sViewID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sViewID</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sDownloadToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sDownloadToken</stringProp>
                      <stringProp name="Argument.value">1578338681175</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sGroupIDs" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sGroupIDs</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sNumberOfLevels" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sNumberOfLevels</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sTopBox" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sTopBox</stringProp>
                      <stringProp name="Argument.value">${BossID}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sChartName" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sChartName</stringProp>
                      <stringProp name="Argument.value">OP119HTMLPerformanceTestChart</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="bHighlightFilter" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">bHighlightFilter</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">rdcou1web28.hosting.aqdom.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/GetPowerPoint/OP119HTMLPerformanceTestChart</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="TestPlan.comments">1/6/20 - Left off adding in missing transaction from new recording: 1_6_20_OP_SEARCH.jmx

SUBSTITUTE sTopBox 29886
In LR - Download Token Date Stamp is removed.</stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html, application/xhtml+xml, image/jxr, */*</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="Connection" elementType="Header">
                      <stringProp name="Header.name">Connection</stringProp>
                      <stringProp name="Header.value">Keep-Alive</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=07_PFTM_OP_OriginalSearch_PPT1;PC=OPHtml5UnsecurePerformanceTest/Chart/GetPowerPoint/OP119HTMLPerformanceTestChart</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">downloadToken</stringProp>
                      <stringProp name="Header.value">${downloadToken}</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">hitBoxLimit</stringProp>
                      <stringProp name="Header.value">${hitBoxLimit}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Size Assertion PPT1" enabled="true">
                  <stringProp name="TestPlan.comments">Taken from View Results Tree - Highlighting the Request - Sampler Result - Body Size in Bytes
Body size in bytes: 46,964 (In LR it was 47,865)</stringProp>
                  <stringProp name="Assertion.test_field">SizeAssertion.response_data</stringProp>
                  <stringProp name="SizeAssertion.size">40000</stringProp>
                  <intProp name="SizeAssertion.operator">3</intProp>
                </SizeAssertion>
                <hashTree/>
              </hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
                <intProp name="ActionProcessor.action">0</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_Portal" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="20 seconds" enabled="true">
                <stringProp name="ConstantTimer.delay">10000</stringProp>
                <stringProp name="RandomTimer.range">20000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_08_OriginalSearch_PDF1" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <stringProp name="TestPlan.comments">User selects the option to PDF.</stringProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/GetPDF/OP119HTMLPerformanceTestChart?bHighlightFilter=false&amp;sChartName=OP119HTMLPerformanceTestChart&amp;nPlanningKey=-1&amp;sGroupIDs=0&amp;sIncludeLegend=true&amp;sNumberOfLevels=2&amp;sOrientation=LandScape&amp;sPageSize=Ledger&amp;sShowChartBackground=true&amp;sShowIndex=false&amp;sTopBox=29886&amp;sViewID=0&amp;sScaling=100&amp;sDownloadToken=1578338707070" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="sShowChartBackground" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sShowChartBackground</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sIncludeLegend" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sIncludeLegend</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="nPlanningKey" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">nPlanningKey</stringProp>
                      <stringProp name="Argument.value">-1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sShowIndex" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sShowIndex</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sGroupIDs" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sGroupIDs</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="bHighlightFilter" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">bHighlightFilter</stringProp>
                      <stringProp name="Argument.value">false</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sPageSize" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sPageSize</stringProp>
                      <stringProp name="Argument.value">Ledger</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sScaling" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sScaling</stringProp>
                      <stringProp name="Argument.value">100</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sOrientation" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sOrientation</stringProp>
                      <stringProp name="Argument.value">LandScape</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sViewID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sViewID</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sDownloadToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sDownloadToken</stringProp>
                      <stringProp name="Argument.value">1578338707070</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sNumberOfLevels" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sNumberOfLevels</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sTopBox" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sTopBox</stringProp>
                      <stringProp name="Argument.value">${BossID}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sChartName" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">sChartName</stringProp>
                      <stringProp name="Argument.value">OP119HTMLPerformanceTestChart</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">rdcou1web28.hosting.aqdom.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/GetPDF/OP119HTMLPerformanceTestChart</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html, application/xhtml+xml, image/jxr, */*</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Host" elementType="Header">
                      <stringProp name="Header.name">Host</stringProp>
                      <stringProp name="Header.value">rdcou1web28.hosting.aqdom.com</stringProp>
                    </elementProp>
                    <elementProp name="Connection" elementType="Header">
                      <stringProp name="Header.name">Connection</stringProp>
                      <stringProp name="Header.value">Keep-Alive</stringProp>
                    </elementProp>
                    <elementProp name="downloadToken" elementType="Header">
                      <stringProp name="Header.name">downloadToken</stringProp>
                      <stringProp name="Header.value">${downloadToken}</stringProp>
                    </elementProp>
                    <elementProp name="X-dynaTrace" elementType="Header">
                      <stringProp name="Header.name">X-dynaTrace</stringProp>
                      <stringProp name="Header.value">NA=08_PFTM_OP_OriginalSearch_PDF1;PC=OPHtml5UnsecurePerformanceTest/Chart/GetPDF/OP119HTMLPerformanceTestChart</stringProp>
                    </elementProp>
                    <elementProp name="hitBoxLimit" elementType="Header">
                      <stringProp name="Header.name">hitBoxLimit</stringProp>
                      <stringProp name="Header.value">${hitBoxLimit}</stringProp>
                    </elementProp>
                    <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                      <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                      <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Size Assertion PDF1" enabled="true">
                  <stringProp name="TestPlan.comments">Body size in bytes: 24436</stringProp>
                  <stringProp name="Assertion.test_field">SizeAssertion.response_data</stringProp>
                  <stringProp name="SizeAssertion.size">20000</stringProp>
                  <intProp name="SizeAssertion.operator">3</intProp>
                </SizeAssertion>
                <hashTree/>
              </hashTree>
              <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
                <boolProp name="displayJMeterProperties">false</boolProp>
                <boolProp name="displayJMeterVariables">true</boolProp>
                <boolProp name="displaySystemProperties">false</boolProp>
              </DebugSampler>
              <hashTree/>
              <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
                <intProp name="ActionProcessor.action">0</intProp>
                <intProp name="ActionProcessor.target">0</intProp>
                <stringProp name="ActionProcessor.duration">0</stringProp>
              </TestAction>
              <hashTree/>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_PDF1" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree>
              <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="120 seconds " enabled="true">
                <stringProp name="ConstantTimer.delay">60000</stringProp>
                <stringProp name="RandomTimer.range">120000</stringProp>
              </UniformRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_09_OriginalSearch_NavigateNewPg2" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <stringProp name="TestPlan.comments">User selects the &quot;Up&quot; Arrow Link to navigate up.</stringProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/GetChartData" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;nPlanningChartKey&quot;: -1,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;oBoxIDs&quot;: [&#xd;
    &quot;${BossID}&quot;&#xd;
  ],&#xd;
  &quot;oGroupIDs&quot;: [&#xd;
    &quot;0&quot;&#xd;
  ],&#xd;
  &quot;iLevels&quot;: 2,&#xd;
  &quot;bHighlightFilter&quot;: false,&#xd;
  &quot;bGetParentOfPartner&quot;: true,&#xd;
  &quot;bShowChainOfCommand&quot;: false&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">rdcou1web28.hosting.aqdom.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/GetChartData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">User selects the &quot;Up&quot; Arrow Link to navigate up. A different BoxID is captured: 21185. Substitute - BossID</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
                  </elementProp>
                  <elementProp name="Content-Length" elementType="Header">
                    <stringProp name="Header.name">Content-Length</stringProp>
                    <stringProp name="Header.value">266</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">Keep-Alive</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="downloadToken" elementType="Header">
                    <stringProp name="Header.name">downloadToken</stringProp>
                    <stringProp name="Header.value">${downloadToken}</stringProp>
                  </elementProp>
                  <elementProp name="X-dynaTrace" elementType="Header">
                    <stringProp name="Header.name">X-dynaTrace</stringProp>
                    <stringProp name="Header.value">NA=09_PFTM_OP_OriginalSearch_NavNewPg2;PC=OPHtml5UnsecurePerformanceTest/Chart/GetChartData</stringProp>
                  </elementProp>
                  <elementProp name="hitBoxLimit" elementType="Header">
                    <stringProp name="Header.name">hitBoxLimit</stringProp>
                    <stringProp name="Header.value">${hitBoxLimit}</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
              <intProp name="ActionProcessor.action">0</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_Portal" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="20 seconds" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">20000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_10_OriginalSearch_PPT2" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <stringProp name="TestPlan.comments">User exports to Power Point again from different level. </stringProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/GetPowerPoint/OP119HTMLPerformanceTestChart?bHighlightFilter=false&amp;sChartName=OP119HTMLPerformanceTestChart&amp;sGroupIDs=0&amp;sIncludeLegend=true&amp;sNumberOfLevels=2&amp;sPageSize=Ledger&amp;sShowChartBackground=true&amp;sTopBox=21185&amp;sViewID=0&amp;sScaling=100&amp;sDownloadToken=1578338748267" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="sPageSize" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sPageSize</stringProp>
                    <stringProp name="Argument.value">Ledger</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sShowChartBackground" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sShowChartBackground</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sScaling" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sScaling</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sIncludeLegend" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sIncludeLegend</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sViewID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sViewID</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sDownloadToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sDownloadToken</stringProp>
                    <stringProp name="Argument.value">1578338748267</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sGroupIDs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sGroupIDs</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sNumberOfLevels" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sNumberOfLevels</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sTopBox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sTopBox</stringProp>
                    <stringProp name="Argument.value">${BossID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sChartName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sChartName</stringProp>
                    <stringProp name="Argument.value">OP119HTMLPerformanceTestChart</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="bHighlightFilter" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">bHighlightFilter</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">rdcou1web28.hosting.aqdom.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/GetPowerPoint/OP119HTMLPerformanceTestChart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Substitute BossID - 21185
sTopBox = BossID</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html, application/xhtml+xml, image/jxr, */*</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">Keep-Alive</stringProp>
                  </elementProp>
                  <elementProp name="downloadToken" elementType="Header">
                    <stringProp name="Header.name">downloadToken</stringProp>
                    <stringProp name="Header.value">${downloadToken}</stringProp>
                  </elementProp>
                  <elementProp name="X-dynaTrace" elementType="Header">
                    <stringProp name="Header.name">X-dynaTrace</stringProp>
                    <stringProp name="Header.value">NA=10_PFTM_OP_OriginalSearch_PPT2;PC=OPHtml5UnsecurePerformanceTest/Chart/GetPowerPoint/OP119HTMLPerformanceTestChart</stringProp>
                  </elementProp>
                  <elementProp name="hitBoxLimit" elementType="Header">
                    <stringProp name="Header.name">hitBoxLimit</stringProp>
                    <stringProp name="Header.value">${hitBoxLimit}</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Size Assertion PPT2" enabled="true">
                <stringProp name="TestPlan.comments">Taken from View Results Tree - Highlighting the Request - Sampler Result - Body Size in Bytes
Body size in bytes: 46,964 (In LR it was 47,865)</stringProp>
                <stringProp name="Assertion.test_field">SizeAssertion.response_data</stringProp>
                <stringProp name="SizeAssertion.size">40000</stringProp>
                <intProp name="SizeAssertion.operator">3</intProp>
              </SizeAssertion>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
              <intProp name="ActionProcessor.action">0</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_Portal" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="20 seconds" enabled="true">
              <stringProp name="ConstantTimer.delay">10000</stringProp>
              <stringProp name="RandomTimer.range">20000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_11_OriginalSearch_PDF2" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <stringProp name="TestPlan.comments">User exports to PDF again from different level.</stringProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/GetPDF/OP119HTMLPerformanceTestChart?bHighlightFilter=false&amp;sChartName=OP119HTMLPerformanceTestChart&amp;nPlanningKey=-1&amp;sGroupIDs=0&amp;sIncludeLegend=true&amp;sNumberOfLevels=2&amp;sOrientation=LandScape&amp;sPageSize=Ledger&amp;sShowChartBackground=true&amp;sShowIndex=false&amp;sTopBox=21185&amp;sViewID=0&amp;sScaling=100&amp;sDownloadToken=1578338758820" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="sShowChartBackground" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sShowChartBackground</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sIncludeLegend" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sIncludeLegend</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nPlanningKey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">nPlanningKey</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sShowIndex" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sShowIndex</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sGroupIDs" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sGroupIDs</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="bHighlightFilter" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">bHighlightFilter</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sPageSize" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sPageSize</stringProp>
                    <stringProp name="Argument.value">Ledger</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sScaling" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sScaling</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sOrientation" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sOrientation</stringProp>
                    <stringProp name="Argument.value">LandScape</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sViewID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sViewID</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sDownloadToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sDownloadToken</stringProp>
                    <stringProp name="Argument.value">1578338758820</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sNumberOfLevels" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sNumberOfLevels</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sTopBox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sTopBox</stringProp>
                    <stringProp name="Argument.value">${BossID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sChartName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">sChartName</stringProp>
                    <stringProp name="Argument.value">OP119HTMLPerformanceTestChart</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">rdcou1web28.hosting.aqdom.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/GetPDF/OP119HTMLPerformanceTestChart</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">sTopBox = 21185</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html, application/xhtml+xml, image/jxr, */*</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">Keep-Alive</stringProp>
                  </elementProp>
                  <elementProp name="downloadToken" elementType="Header">
                    <stringProp name="Header.name">downloadToken</stringProp>
                    <stringProp name="Header.value">${downloadToken}</stringProp>
                  </elementProp>
                  <elementProp name="X-dynaTrace" elementType="Header">
                    <stringProp name="Header.name">X-dynaTrace</stringProp>
                    <stringProp name="Header.value">NA=11_PFTM_OP_OriginalSearch_PDF2;PC=OPHtml5UnsecurePerformanceTest/Chart/GetPDF/OP119HTMLPerformanceTestChart</stringProp>
                  </elementProp>
                  <elementProp name="hitBoxLimit" elementType="Header">
                    <stringProp name="Header.name">hitBoxLimit</stringProp>
                    <stringProp name="Header.value">${hitBoxLimit}</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <SizeAssertion guiclass="SizeAssertionGui" testclass="SizeAssertion" testname="Size Assertion PDF2" enabled="true">
                <stringProp name="Assertion.test_field">SizeAssertion.response_data</stringProp>
                <stringProp name="SizeAssertion.size">20000</stringProp>
                <intProp name="SizeAssertion.operator">3</intProp>
              </SizeAssertion>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
              <intProp name="ActionProcessor.action">0</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think_PDF2" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="120 seconds" enabled="true">
              <stringProp name="ConstantTimer.delay">60000</stringProp>
              <stringProp name="RandomTimer.range">120000</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PFTM_OP_12_OriginalSearch_Clear" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <stringProp name="TestPlan.comments">User must Clear existing Search Results in order to perform another Search {select search icon and clear button)</stringProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/Search" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;sChartName&quot;: &quot;OP119HTMLPerformanceTestChart&quot;,&#xd;
  &quot;sViewID&quot;: &quot;0&quot;,&#xd;
  &quot;sCurrentTopBoxID&quot;: &quot;21002&quot;,&#xd;
  &quot;oSearchCriteria&quot;: {&#xd;
    &quot;FieldCriteriaList&quot;: {&#xd;
      &quot;Data&quot;: [&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FullName&quot;,&#xd;
          &quot;CriteriaItems&quot;: [&#xd;
            {&#xd;
              &quot;TestValue&quot;: &quot;${SearchValue}&quot;,&#xd;
              &quot;LowerValue&quot;: &quot;&quot;,&#xd;
              &quot;UpperValue&quot;: &quot;&quot;,&#xd;
              &quot;ComparisonType&quot;: &quot;AnyPartField&quot;,&#xd;
              &quot;Options&quot;: {}&#xd;
            }&#xd;
          ],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;JobTitle&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;FieldDefID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
          &quot;CriteriaItems&quot;: [],&#xd;
          &quot;ComparisonType&quot;: &quot;AnyPartField&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    &quot;FilterCriteriaList&quot;: [&#xd;
      {&#xd;
        &quot;FilterID&quot;: &quot;Gender&quot;,&#xd;
        &quot;FilterType&quot;: &quot;Categoried&quot;,&#xd;
        &quot;SelectedFilters&quot;: [&#xd;
          &quot;80&quot;&#xd;
        ],&#xd;
        &quot;ComparisonType&quot;: &quot;InGroup&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;FilterID&quot;: &quot;Location&quot;,&#xd;
        &quot;FilterType&quot;: &quot;Categoried&quot;,&#xd;
        &quot;SelectedFilters&quot;: [&#xd;
          &quot;36&quot;&#xd;
        ],&#xd;
        &quot;ComparisonType&quot;: &quot;InGroup&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;SearchColumns&quot;: [&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FullName&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;JobTitle&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;E8F3891D-55FA-4C2F-9C5F-2E0FB3E8152F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;71D9A883-F5FC-4B60-B0E6-E5C9872B196C&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;FB827D3C-BCD3-4719-83D4-D5F9603C1341&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;1E33975E-DD66-44D6-ADE4-ACCD83D266A3&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;CC7C30FA-816F-45ED-89FB-2D680695442F&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;483254A4-46C9-4C5F-BF39-8DAEAE86251D&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;8D22A39F-1E44-49B1-B3F4-ADDE3FEA32C0&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9D25A71A-3A96-437F-BAE9-D585D059169B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;92A002F3-D996-4B2D-8809-3E7C4E2BA880&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;67C32BA2-3AE9-4B3B-9775-4FD59B36EA76&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F3F175B7-3A0D-4C20-8A1B-835F53451463&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;9E1A1769-DF32-44C6-B7DE-5FB35284A50B&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;161F99E4-2F32-4954-A6ED-A5FE842A0EAB&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;F4BFFF7B-D9FC-4FDC-912D-C92D883916B8&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;2B43C981-7492-4AEC-BF73-5AA5D0ACB821&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      },&#xd;
      {&#xd;
        &quot;FieldDefinitionID&quot;: &quot;6B7EA60B-AFA0-44BD-96C5-2226C91BE1DF&quot;,&#xd;
        &quot;Width&quot;: 80&#xd;
      }&#xd;
    ],&#xd;
    &quot;Name&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;sPageNumber&quot;: 0,&#xd;
  &quot;sSortFieldID&quot;: &quot;FullName&quot;,&#xd;
  &quot;bSortAscending&quot;: true,&#xd;
  &quot;nSearchResultPageCount&quot;: 3&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">rdcou1web28.hosting.aqdom.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">&quot;TestValue&quot;: &quot;dar&quot;, - substitute 

sPageNumber\&quot;: 0 - this means search cleared. Only needed this post from Fiddler.</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://rdcou1web28.hosting.aqdom.com/OPHtml5UnsecurePerformanceTest/Chart/LoadChart/OP119HTMLPerformanceTestChart</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko</stringProp>
                  </elementProp>
                  <elementProp name="Content-Length" elementType="Header">
                    <stringProp name="Header.name">Content-Length</stringProp>
                    <stringProp name="Header.value">3843</stringProp>
                  </elementProp>
                  <elementProp name="Host" elementType="Header">
                    <stringProp name="Header.name">Host</stringProp>
                    <stringProp name="Header.value">rdcou1web28.hosting.aqdom.com</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">Keep-Alive</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="OPHtml5UnsecurePerformanceTest" elementType="Header">
                    <stringProp name="Header.name">OPHtml5UnsecurePerformanceTest</stringProp>
                    <stringProp name="Header.value">${COOKIE_OPHtml5UnsecurePerformanceTest}</stringProp>
                  </elementProp>
                  <elementProp name="X-dynaTrace" elementType="Header">
                    <stringProp name="Header.name">X-dynaTrace</stringProp>
                    <stringProp name="Header.value">NA=12_PFTM_OP_OriginalSearch_Clear;PC=OPHtml5UnsecurePerformanceTest/Chart/Search</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="false">
              <intProp name="ActionProcessor.action">0</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">0</stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
